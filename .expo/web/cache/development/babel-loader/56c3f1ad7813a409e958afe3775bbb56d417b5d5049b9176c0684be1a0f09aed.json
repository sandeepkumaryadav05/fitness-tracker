{"ast":null,"code":"\"use strict\";\n\nexport function getDrawerStatusFromState(state) {\n  if (state.history == null) {\n    throw new Error(\"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\");\n  }\n  const entry = state.history.findLast(it => it.type === 'drawer');\n  return entry?.status ?? state.default ?? 'closed';\n}","map":{"version":3,"names":["getDrawerStatusFromState","state","history","Error","entry","findLast","it","type","status","default"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\fit-get\\fitness-tracker\\node_modules\\@react-navigation\\drawer\\src\\utils\\getDrawerStatusFromState.tsx"],"sourcesContent":["import type {\n  DrawerNavigationState,\n  DrawerStatus,\n  ParamListBase,\n} from '@react-navigation/native';\n\nexport function getDrawerStatusFromState(\n  state: DrawerNavigationState<ParamListBase>\n): DrawerStatus {\n  if (state.history == null) {\n    throw new Error(\n      \"Couldn't find the drawer status in the state object. Is it a valid state object of drawer navigator?\"\n    );\n  }\n\n  const entry = state.history.findLast((it) => it.type === 'drawer') as\n    | { type: 'drawer'; status: DrawerStatus }\n    | undefined;\n\n  return entry?.status ?? state.default ?? 'closed';\n}\n"],"mappings":";;AAMA,OAAO,SAASA,wBAAwBA,CACtCC,KAA2C,EAC7B;EACd,IAAIA,KAAK,CAACC,OAAO,IAAI,IAAI,EAAE;IACzB,MAAM,IAAIC,KAAK,CACb,sGACF,CAAC;EACH;EAEA,MAAMC,KAAK,GAAGH,KAAK,CAACC,OAAO,CAACG,QAAQ,CAAEC,EAAE,IAAKA,EAAE,CAACC,IAAI,KAAK,QAAQ,CAEpD;EAEb,OAAOH,KAAK,EAAEI,MAAM,IAAIP,KAAK,CAACQ,OAAO,IAAI,QAAQ;AACnD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}