{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"tintColor\", \"accessibilityLabel\", \"imageSource\"];\nimport { HeaderButton } from '@react-navigation/elements';\nimport { DrawerActions, useNavigation } from '@react-navigation/native';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport toggleDrawerIcon from './assets/toggle-drawer-icon.png';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function DrawerToggleButton(_ref) {\n  let {\n      tintColor,\n      accessibilityLabel = 'Show navigation menu',\n      imageSource = toggleDrawerIcon\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const navigation = useNavigation();\n  return _jsx(HeaderButton, Object.assign({}, rest, {\n    accessibilityLabel: accessibilityLabel,\n    onPress: () => navigation.dispatch(DrawerActions.toggleDrawer()),\n    children: _jsx(Image, {\n      resizeMode: \"contain\",\n      source: imageSource,\n      fadeDuration: 0,\n      tintColor: tintColor,\n      style: styles.icon\n    })\n  }));\n}\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginVertical: 8,\n    marginHorizontal: 5\n  }\n});","map":{"version":3,"names":["HeaderButton","DrawerActions","useNavigation","Image","StyleSheet","toggleDrawerIcon","jsx","_jsx","DrawerToggleButton","_ref","tintColor","accessibilityLabel","imageSource","rest","_objectWithoutPropertiesLoose","_excluded","navigation","Object","assign","onPress","dispatch","toggleDrawer","children","resizeMode","source","fadeDuration","style","styles","icon","create","height","width","marginVertical","marginHorizontal"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\fit-get\\fitness-tracker\\node_modules\\@react-navigation\\drawer\\src\\views\\DrawerToggleButton.tsx"],"sourcesContent":["import { HeaderButton } from '@react-navigation/elements';\nimport {\n  DrawerActions,\n  type ParamListBase,\n  useNavigation,\n} from '@react-navigation/native';\nimport { Image, type ImageSourcePropType, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '../types';\nimport toggleDrawerIcon from './assets/toggle-drawer-icon.png';\n\ntype Props = {\n  accessibilityLabel?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  tintColor?: string;\n  imageSource?: ImageSourcePropType;\n};\n\nexport function DrawerToggleButton({\n  tintColor,\n  accessibilityLabel = 'Show navigation menu',\n  imageSource = toggleDrawerIcon,\n  ...rest\n}: Props) {\n  const navigation = useNavigation<DrawerNavigationProp<ParamListBase>>();\n\n  return (\n    <HeaderButton\n      {...rest}\n      accessibilityLabel={accessibilityLabel}\n      onPress={() => navigation.dispatch(DrawerActions.toggleDrawer())}\n    >\n      <Image\n        resizeMode=\"contain\"\n        source={imageSource}\n        fadeDuration={0}\n        tintColor={tintColor}\n        style={styles.icon}\n      />\n    </HeaderButton>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n    marginVertical: 8,\n    marginHorizontal: 5,\n  },\n});\n"],"mappings":";;;;AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SACEC,aAAa,EAEbC,aAAa,QACR,0BAA0B;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAIjC,OAAOC,gBAAgB,MAAM,iCAAiC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAU/D,OAAO,SAASC,kBAAkBA,CAAAC,IAAA,EAKxB;EAAA,IALyB;MACjCC,SAAS;MACTC,kBAAkB,GAAG,sBAAsB;MAC3CC,WAAW,GAAGP;IAET,CAAC,GAAAI,IAAA;IADHI,IAAA,GAAAC,6BAAA,CAAAL,IAAA,EAAAM,SAAA;EAEH,MAAMC,UAAU,GAAGd,aAAa,CAAsC,CAAC;EAEvE,OACEK,IAAA,CAACP,YAAY,EAAAiB,MAAA,CAAAC,MAAA,KACPL,IAAI;IACRF,kBAAkB,EAAEA,kBAAmB;IACvCQ,OAAO,EAAEA,CAAA,KAAMH,UAAU,CAACI,QAAQ,CAACnB,aAAa,CAACoB,YAAY,CAAC,CAAC,CAAE;IAAAC,QAAA,EAEjEf,IAAA,CAACJ,KAAK;MACJoB,UAAU,EAAC,SAAS;MACpBC,MAAM,EAAEZ,WAAY;MACpBa,YAAY,EAAE,CAAE;MAChBf,SAAS,EAAEA,SAAU;MACrBgB,KAAK,EAAEC,MAAM,CAACC;IAAK,CACpB;EAAA,EACW,CAAC;AAEnB;AAEA,MAAMD,MAAM,GAAGvB,UAAU,CAACyB,MAAM,CAAC;EAC/BD,IAAI,EAAE;IACJE,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE,CAAC;IACjBC,gBAAgB,EAAE;EACpB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}