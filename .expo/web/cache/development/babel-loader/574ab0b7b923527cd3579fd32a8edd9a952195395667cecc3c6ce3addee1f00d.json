{"ast":null,"code":"\"use strict\";\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"initialRouteName\", \"defaultStatus\", \"backBehavior\", \"children\", \"layout\", \"screenListeners\", \"screenOptions\", \"screenLayout\", \"UNSTABLE_router\"];\nimport { createNavigatorFactory, DrawerRouter, useNavigationBuilder } from '@react-navigation/native';\nimport { DrawerView } from \"../views/DrawerView.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction DrawerNavigator(_ref) {\n  let {\n      id,\n      initialRouteName,\n      defaultStatus = 'closed',\n      backBehavior,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n      screenLayout,\n      UNSTABLE_router\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const {\n    state,\n    descriptors,\n    navigation,\n    NavigationContent\n  } = useNavigationBuilder(DrawerRouter, {\n    id,\n    initialRouteName,\n    defaultStatus,\n    backBehavior,\n    children,\n    layout,\n    screenListeners,\n    screenOptions,\n    screenLayout,\n    UNSTABLE_router\n  });\n  return _jsx(NavigationContent, {\n    children: _jsx(DrawerView, Object.assign({}, rest, {\n      defaultStatus: defaultStatus,\n      state: state,\n      descriptors: descriptors,\n      navigation: navigation\n    }))\n  });\n}\nexport function createDrawerNavigator(config) {\n  return createNavigatorFactory(DrawerNavigator)(config);\n}","map":{"version":3,"names":["createNavigatorFactory","DrawerRouter","useNavigationBuilder","DrawerView","jsx","_jsx","DrawerNavigator","_ref","id","initialRouteName","defaultStatus","backBehavior","children","layout","screenListeners","screenOptions","screenLayout","UNSTABLE_router","rest","_objectWithoutPropertiesLoose","_excluded","state","descriptors","navigation","NavigationContent","Object","assign","createDrawerNavigator","config"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\fit-get\\fitness-tracker\\node_modules\\@react-navigation\\drawer\\src\\navigators\\createDrawerNavigator.tsx"],"sourcesContent":["import {\n  createNavigatorFactory,\n  type DrawerActionHelpers,\n  type DrawerNavigationState,\n  DrawerRouter,\n  type DrawerRouterOptions,\n  type NavigatorTypeBagBase,\n  type ParamListBase,\n  type StaticConfig,\n  type TypedNavigator,\n  useNavigationBuilder,\n} from '@react-navigation/native';\n\nimport type {\n  DrawerNavigationEventMap,\n  DrawerNavigationOptions,\n  DrawerNavigationProp,\n  DrawerNavigatorProps,\n} from '../types';\nimport { DrawerView } from '../views/DrawerView';\n\nfunction DrawerNavigator({\n  id,\n  initialRouteName,\n  defaultStatus = 'closed',\n  backBehavior,\n  children,\n  layout,\n  screenListeners,\n  screenOptions,\n  screenLayout,\n  UNSTABLE_router,\n  ...rest\n}: DrawerNavigatorProps) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      DrawerNavigationState<ParamListBase>,\n      DrawerRouterOptions,\n      DrawerActionHelpers<ParamListBase>,\n      DrawerNavigationOptions,\n      DrawerNavigationEventMap\n    >(DrawerRouter, {\n      id,\n      initialRouteName,\n      defaultStatus,\n      backBehavior,\n      children,\n      layout,\n      screenListeners,\n      screenOptions,\n      screenLayout,\n      UNSTABLE_router,\n    });\n\n  return (\n    <NavigationContent>\n      <DrawerView\n        {...rest}\n        defaultStatus={defaultStatus}\n        state={state}\n        descriptors={descriptors}\n        navigation={navigation}\n      />\n    </NavigationContent>\n  );\n}\n\nexport function createDrawerNavigator<\n  const ParamList extends ParamListBase,\n  const NavigatorID extends string | undefined = undefined,\n  const TypeBag extends NavigatorTypeBagBase = {\n    ParamList: ParamList;\n    NavigatorID: NavigatorID;\n    State: DrawerNavigationState<ParamList>;\n    ScreenOptions: DrawerNavigationOptions;\n    EventMap: DrawerNavigationEventMap;\n    NavigationList: {\n      [RouteName in keyof ParamList]: DrawerNavigationProp<\n        ParamList,\n        RouteName,\n        NavigatorID\n      >;\n    };\n    Navigator: typeof DrawerNavigator;\n  },\n  const Config extends StaticConfig<TypeBag> = StaticConfig<TypeBag>,\n>(config?: Config): TypedNavigator<TypeBag, Config> {\n  return createNavigatorFactory(DrawerNavigator)(config);\n}\n"],"mappings":";;;;AAAA,SACEA,sBAAsB,EAGtBC,YAAY,EAMZC,oBAAoB,QACf,0BAA0B;AAQjC,SAASC,UAAU,QAAQ,wBAAqB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjD,SAASC,eAAeA,CAAAC,IAAA,EAYC;EAAA,IAZA;MACvBC,EAAE;MACFC,gBAAgB;MAChBC,aAAa,GAAG,QAAQ;MACxBC,YAAY;MACZC,QAAQ;MACRC,MAAM;MACNC,eAAe;MACfC,aAAa;MACbC,YAAY;MACZC;IAEoB,CAAC,GAAAV,IAAA;IADlBW,IAAA,GAAAC,6BAAA,CAAAZ,IAAA,EAAAa,SAAA;EAEH,MAAM;IAAEC,KAAK;IAAEC,WAAW;IAAEC,UAAU;IAAEC;EAAkB,CAAC,GACzDtB,oBAAoB,CAMlBD,YAAY,EAAE;IACdO,EAAE;IACFC,gBAAgB;IAChBC,aAAa;IACbC,YAAY;IACZC,QAAQ;IACRC,MAAM;IACNC,eAAe;IACfC,aAAa;IACbC,YAAY;IACZC;EACF,CAAC,CAAC;EAEJ,OACEZ,IAAA,CAACmB,iBAAiB;IAAAZ,QAAA,EAChBP,IAAA,CAACF,UAAU,EAAAsB,MAAA,CAAAC,MAAA,KACLR,IAAI;MACRR,aAAa,EAAEA,aAAc;MAC7BW,KAAK,EAAEA,KAAM;MACbC,WAAW,EAAEA,WAAY;MACzBC,UAAU,EAAEA;IAAA,EACb;EAAC,CACe,CAAC;AAExB;AAEA,OAAO,SAASI,qBAAqBA,CAmBnCC,MAAe,EAAmC;EAClD,OAAO5B,sBAAsB,CAACM,eAAe,CAAC,CAACsB,MAAM,CAAC;AACxD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}