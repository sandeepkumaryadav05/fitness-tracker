{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\OneDrive\\\\Desktop\\\\fit-get\\\\fitness-tracker\\\\screens\\\\CalorieTrackerScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { LineChart } from 'react-native-chart-kit';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst screenWidth = Dimensions.get('window').width;\nexport default function CalorieTrackerScreen() {\n  const [calorieGoal, setCalorieGoal] = useState(2000);\n  const [intake, setIntake] = useState('');\n  const [entries, setEntries] = useState([]);\n  const [goalModalVisible, setGoalModalVisible] = useState(false);\n  const [newGoal, setNewGoal] = useState('');\n  useEffect(() => {\n    loadData();\n  }, []);\n  useEffect(() => {\n    saveData();\n  }, [entries, calorieGoal]);\n  const saveData = async () => {\n    try {\n      await AsyncStorage.setItem('calorieEntries', JSON.stringify(entries));\n      await AsyncStorage.setItem('calorieGoal', calorieGoal.toString());\n    } catch (error) {\n      console.error('Failed to save:', error);\n    }\n  };\n  const loadData = async () => {\n    try {\n      const storedEntries = await AsyncStorage.getItem('calorieEntries');\n      const storedGoal = await AsyncStorage.getItem('calorieGoal');\n      if (storedEntries) setEntries(JSON.parse(storedEntries));\n      if (storedGoal) setCalorieGoal(parseInt(storedGoal));\n    } catch (error) {\n      console.error('Failed to load:', error);\n    }\n  };\n  const addEntry = () => {\n    const value = parseInt(intake);\n    if (isNaN(value) || value <= 0) {\n      Alert.alert('Invalid Entry', 'Please enter a valid calorie amount.');\n      return;\n    }\n    const newEntry = {\n      id: Date.now().toString(),\n      amount: value,\n      date: new Date().toLocaleDateString('en-GB')\n    };\n    setEntries([...entries, newEntry]);\n    setIntake('');\n  };\n  const deleteEntry = id => {\n    setEntries(entries.filter(entry => entry.id !== id));\n  };\n  const resetHistory = () => {\n    Alert.alert('Clear History', 'Are you sure you want to clear all entries?', [{\n      text: 'Cancel'\n    }, {\n      text: 'Clear',\n      onPress: () => setEntries([]),\n      style: 'destructive'\n    }]);\n  };\n  const handleGoalUpdate = () => {\n    const parsedGoal = parseInt(newGoal);\n    if (!isNaN(parsedGoal) && parsedGoal > 0) {\n      setCalorieGoal(parsedGoal);\n      setGoalModalVisible(false);\n      setNewGoal('');\n    } else {\n      Alert.alert('Invalid Input', 'Please enter a valid number.');\n    }\n  };\n  const totalIntake = entries.reduce((sum, entry) => sum + parseInt(entry.amount), 0);\n  const weeklyAverage = entries.length > 0 ? Math.round(totalIntake / entries.length) : 0;\n  const remaining = Math.max(calorieGoal - totalIntake, 0);\n  const validEntries = entries.filter(e => !isNaN(e.amount));\n  const lineChartData = validEntries.length > 0 ? {\n    labels: validEntries.map(entry => entry.date),\n    datasets: [{\n      data: validEntries.map(e => e.amount),\n      strokeWidth: 2\n    }]\n  } : {\n    labels: [''],\n    datasets: [{\n      data: [0]\n    }]\n  };\n  const Header = () => _jsxDEV(View, {\n    children: [_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Calorie Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.goal,\n      children: [\"Goal: \", calorieGoal, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), _jsxDEV(View, {\n      style: styles.progressContainer,\n      children: _jsxDEV(AnimatedCircularProgress, {\n        size: 140,\n        width: 12,\n        fill: totalIntake / calorieGoal * 100,\n        tintColor: \"#ff6f00\",\n        backgroundColor: \"#ddd\",\n        duration: 1000,\n        children: () => _jsxDEV(View, {\n          style: styles.progressInner,\n          children: [_jsxDEV(FontAwesome5, {\n            name: \"fire\",\n            size: 24,\n            color: \"#ff6f00\",\n            style: {\n              marginBottom: 4\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.calorieText,\n            children: [totalIntake, \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), _jsxDEV(Text, {\n            style: styles.remainingText,\n            children: [\"Remaining: \", remaining, \" kcal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), validEntries.length > 0 && _jsxDEV(LineChart, {\n      data: lineChartData,\n      width: screenWidth - 40,\n      height: 220,\n      chartConfig: {\n        backgroundColor: '#fff',\n        backgroundGradientFrom: '#fff',\n        backgroundGradientTo: '#fff',\n        decimalPlaces: 0,\n        color: (opacity = 1) => `rgba(255, 111, 0, ${opacity})`,\n        labelColor: () => '#777',\n        propsForDots: {\n          r: '5',\n          strokeWidth: '2',\n          stroke: '#ff6f00'\n        }\n      },\n      bezier: true,\n      style: styles.chart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), _jsxDEV(Text, {\n      style: styles.average,\n      children: [\"\\uD83D\\uDCCA Weekly Average: \", weeklyAverage, \" kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), _jsxDEV(TextInput, {\n      style: styles.input,\n      placeholder: \"Enter calorie intake\",\n      value: intake,\n      onChangeText: setIntake,\n      keyboardType: \"numeric\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), _jsxDEV(TouchableOpacity, {\n      style: styles.addButton,\n      onPress: addEntry,\n      children: _jsxDEV(Text, {\n        style: styles.addButtonText,\n        children: \"Add Intake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n  return _jsxDEV(_Fragment, {\n    children: [_jsxDEV(FlatList, {\n      contentContainerStyle: styles.container,\n      data: entries,\n      keyExtractor: item => item.id,\n      ListHeaderComponent: Header,\n      renderItem: ({\n        item\n      }) => _jsxDEV(View, {\n        style: styles.entryItem,\n        children: [_jsxDEV(Text, {\n          style: styles.entryText,\n          children: [item.amount, \" kcal\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          onPress: () => deleteEntry(item.id),\n          children: _jsxDEV(MaterialIcons, {\n            name: \"delete\",\n            size: 22,\n            color: \"#e53935\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this),\n      ListFooterComponent: _jsxDEV(_Fragment, {\n        children: [_jsxDEV(TouchableOpacity, {\n          style: styles.goalButton,\n          onPress: () => setGoalModalVisible(true),\n          children: _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Change Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), _jsxDEV(TouchableOpacity, {\n          style: styles.clearButton,\n          onPress: resetHistory,\n          children: _jsxDEV(Text, {\n            style: styles.buttonText,\n            children: \"Clear History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), _jsxDEV(Modal, {\n      visible: goalModalVisible,\n      animationType: \"slide\",\n      transparent: true,\n      children: _jsxDEV(View, {\n        style: styles.modalOverlay,\n        children: _jsxDEV(View, {\n          style: styles.modalContainer,\n          children: [_jsxDEV(Text, {\n            style: styles.modalTitle,\n            children: \"Set New Goal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), _jsxDEV(TextInput, {\n            style: styles.modalInput,\n            placeholder: \"e.g. 2200\",\n            keyboardType: \"numeric\",\n            value: newGoal,\n            onChangeText: setNewGoal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            style: styles.saveButton,\n            onPress: handleGoalUpdate,\n            children: _jsxDEV(Text, {\n              style: styles.saveButtonText,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), _jsxDEV(TouchableOpacity, {\n            onPress: () => setGoalModalVisible(false),\n            children: _jsxDEV(Text, {\n              style: styles.cancelText,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#f9f9fb'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 8,\n    color: '#333',\n    textAlign: 'center'\n  },\n  goal: {\n    fontSize: 16,\n    marginBottom: 10,\n    color: '#666',\n    textAlign: 'center'\n  },\n  progressContainer: {\n    marginVertical: 20,\n    alignItems: 'center'\n  },\n  progressText: {\n    alignItems: 'center',\n    marginTop: 10\n  },\n  progressInner: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  calorieText: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#ff6f00'\n  },\n  remainingText: {\n    fontSize: 14,\n    color: '#555'\n  },\n  chart: {\n    borderRadius: 12,\n    marginBottom: 10\n  },\n  average: {\n    fontSize: 14,\n    fontStyle: 'italic',\n    color: '#777',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#bbb',\n    borderRadius: 10,\n    padding: 12,\n    fontSize: 16,\n    marginBottom: 10\n  },\n  addButton: {\n    backgroundColor: '#4caf50',\n    padding: 14,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginBottom: 20\n  },\n  addButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  entryItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: '#eef3f8',\n    padding: 12,\n    marginVertical: 5,\n    borderRadius: 8\n  },\n  entryText: {\n    fontSize: 16,\n    color: '#333'\n  },\n  goalButton: {\n    backgroundColor: '#2196f3',\n    padding: 14,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 20\n  },\n  clearButton: {\n    backgroundColor: '#e53935',\n    padding: 14,\n    borderRadius: 10,\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 30\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: 'rgba(0,0,0,0.4)',\n    paddingHorizontal: 30\n  },\n  modalContainer: {\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    padding: 20\n  },\n  modalTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  modalInput: {\n    borderWidth: 1,\n    borderColor: '#bbb',\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 16,\n    marginBottom: 15\n  },\n  saveButton: {\n    backgroundColor: '#4caf50',\n    padding: 12,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  saveButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  },\n  cancelText: {\n    textAlign: 'center',\n    color: '#888',\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TextInput","TouchableOpacity","StyleSheet","FlatList","Modal","Alert","AsyncStorage","LineChart","Dimensions","AnimatedCircularProgress","FontAwesome5","MaterialIcons","jsxDEV","_jsxDEV","Fragment","_Fragment","screenWidth","get","width","CalorieTrackerScreen","calorieGoal","setCalorieGoal","intake","setIntake","entries","setEntries","goalModalVisible","setGoalModalVisible","newGoal","setNewGoal","loadData","saveData","setItem","JSON","stringify","toString","error","console","storedEntries","getItem","storedGoal","parse","parseInt","addEntry","value","isNaN","alert","newEntry","id","Date","now","amount","date","toLocaleDateString","deleteEntry","filter","entry","resetHistory","text","onPress","style","handleGoalUpdate","parsedGoal","totalIntake","reduce","sum","weeklyAverage","length","Math","round","remaining","max","validEntries","e","lineChartData","labels","map","datasets","data","strokeWidth","Header","children","styles","title","fileName","_jsxFileName","lineNumber","columnNumber","goal","progressContainer","size","fill","tintColor","backgroundColor","duration","progressInner","name","color","marginBottom","calorieText","remainingText","height","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","opacity","labelColor","propsForDots","r","stroke","bezier","chart","average","input","placeholder","onChangeText","keyboardType","addButton","addButtonText","contentContainerStyle","container","keyExtractor","item","ListHeaderComponent","renderItem","entryItem","entryText","ListFooterComponent","goalButton","buttonText","clearButton","visible","animationType","transparent","modalOverlay","modalContainer","modalTitle","modalInput","saveButton","saveButtonText","cancelText","create","padding","fontSize","fontWeight","textAlign","marginVertical","alignItems","progressText","marginTop","justifyContent","borderRadius","fontStyle","borderWidth","borderColor","flexDirection","flex","paddingHorizontal"],"sources":["C:/Users/Lenovo/OneDrive/Desktop/fit-get/fitness-tracker/screens/CalorieTrackerScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View, Text, TextInput, TouchableOpacity, StyleSheet, FlatList, Modal, Alert,\r\n} from 'react-native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { LineChart } from 'react-native-chart-kit';\r\nimport { Dimensions } from 'react-native';\r\nimport { AnimatedCircularProgress } from 'react-native-circular-progress';\r\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nexport default function CalorieTrackerScreen() {\r\n  const [calorieGoal, setCalorieGoal] = useState(2000);\r\n  const [intake, setIntake] = useState('');\r\n  const [entries, setEntries] = useState([]);\r\n  const [goalModalVisible, setGoalModalVisible] = useState(false);\r\n  const [newGoal, setNewGoal] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    saveData();\r\n  }, [entries, calorieGoal]);\r\n\r\n  const saveData = async () => {\r\n    try {\r\n      await AsyncStorage.setItem('calorieEntries', JSON.stringify(entries));\r\n      await AsyncStorage.setItem('calorieGoal', calorieGoal.toString());\r\n    } catch (error) {\r\n      console.error('Failed to save:', error);\r\n    }\r\n  };\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const storedEntries = await AsyncStorage.getItem('calorieEntries');\r\n      const storedGoal = await AsyncStorage.getItem('calorieGoal');\r\n      if (storedEntries) setEntries(JSON.parse(storedEntries));\r\n      if (storedGoal) setCalorieGoal(parseInt(storedGoal));\r\n    } catch (error) {\r\n      console.error('Failed to load:', error);\r\n    }\r\n  };\r\n\r\n  const addEntry = () => {\r\n    const value = parseInt(intake);\r\n    if (isNaN(value) || value <= 0) {\r\n      Alert.alert('Invalid Entry', 'Please enter a valid calorie amount.');\r\n      return;\r\n    }\r\n    const newEntry = {\r\n      id: Date.now().toString(),\r\n      amount: value,\r\n      date: new Date().toLocaleDateString('en-GB'),\r\n    };\r\n    setEntries([...entries, newEntry]);\r\n    setIntake('');\r\n  };\r\n\r\n  const deleteEntry = (id) => {\r\n    setEntries(entries.filter(entry => entry.id !== id));\r\n  };\r\n\r\n  const resetHistory = () => {\r\n    Alert.alert('Clear History', 'Are you sure you want to clear all entries?', [\r\n      { text: 'Cancel' },\r\n      { text: 'Clear', onPress: () => setEntries([]), style: 'destructive' },\r\n    ]);\r\n  };\r\n\r\n  const handleGoalUpdate = () => {\r\n    const parsedGoal = parseInt(newGoal);\r\n    if (!isNaN(parsedGoal) && parsedGoal > 0) {\r\n      setCalorieGoal(parsedGoal);\r\n      setGoalModalVisible(false);\r\n      setNewGoal('');\r\n    } else {\r\n      Alert.alert('Invalid Input', 'Please enter a valid number.');\r\n    }\r\n  };\r\n\r\n  const totalIntake = entries.reduce((sum, entry) => sum + parseInt(entry.amount), 0);\r\n  const weeklyAverage = entries.length > 0 ? Math.round(totalIntake / entries.length) : 0;\r\n  const remaining = Math.max(calorieGoal - totalIntake, 0);\r\n\r\n  const validEntries = entries.filter(e => !isNaN(e.amount));\r\n\r\n  const lineChartData = validEntries.length > 0 ? {\r\n    labels: validEntries.map(entry => entry.date),\r\n    datasets: [\r\n      {\r\n        data: validEntries.map(e => e.amount),\r\n        strokeWidth: 2,\r\n      },\r\n    ],\r\n  } : {\r\n    labels: [''],\r\n    datasets: [{ data: [0] }],\r\n  };\r\n\r\n  const Header = () => (\r\n    <View>\r\n      <Text style={styles.title}>Calorie Tracker</Text>\r\n      <Text style={styles.goal}>Goal: {calorieGoal} kcal</Text>\r\n\r\n      <View style={styles.progressContainer}>\r\n        <AnimatedCircularProgress\r\n          size={140}\r\n          width={12}\r\n          fill={(totalIntake / calorieGoal) * 100}\r\n          tintColor=\"#ff6f00\"\r\n          backgroundColor=\"#ddd\"\r\n          duration={1000}\r\n        >\r\n          {() => (\r\n            <View style={styles.progressInner}>\r\n              <FontAwesome5 name=\"fire\" size={24} color=\"#ff6f00\" style={{ marginBottom: 4 }} />\r\n              <Text style={styles.calorieText}>{totalIntake} kcal</Text>\r\n              <Text style={styles.remainingText}>Remaining: {remaining} kcal</Text>\r\n            </View>\r\n          )}\r\n        </AnimatedCircularProgress>\r\n      </View>\r\n\r\n      {validEntries.length > 0 && (\r\n        <LineChart\r\n          data={lineChartData}\r\n          width={screenWidth - 40}\r\n          height={220}\r\n          chartConfig={{\r\n            backgroundColor: '#fff',\r\n            backgroundGradientFrom: '#fff',\r\n            backgroundGradientTo: '#fff',\r\n            decimalPlaces: 0,\r\n            color: (opacity = 1) => `rgba(255, 111, 0, ${opacity})`,\r\n            labelColor: () => '#777',\r\n            propsForDots: {\r\n              r: '5',\r\n              strokeWidth: '2',\r\n              stroke: '#ff6f00',\r\n            },\r\n          }}\r\n          bezier\r\n          style={styles.chart}\r\n        />\r\n      )}\r\n\r\n      <Text style={styles.average}>📊 Weekly Average: {weeklyAverage} kcal</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Enter calorie intake\"\r\n        value={intake}\r\n        onChangeText={setIntake}\r\n        keyboardType=\"numeric\"\r\n      />\r\n      <TouchableOpacity style={styles.addButton} onPress={addEntry}>\r\n        <Text style={styles.addButtonText}>Add Intake</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <FlatList\r\n        contentContainerStyle={styles.container}\r\n        data={entries}\r\n        keyExtractor={(item) => item.id}\r\n        ListHeaderComponent={Header}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.entryItem}>\r\n            <Text style={styles.entryText}>{item.amount} kcal</Text>\r\n            <TouchableOpacity onPress={() => deleteEntry(item.id)}>\r\n              <MaterialIcons name=\"delete\" size={22} color=\"#e53935\" />\r\n            </TouchableOpacity>\r\n          </View>\r\n        )}\r\n        ListFooterComponent={\r\n          <>\r\n            <TouchableOpacity style={styles.goalButton} onPress={() => setGoalModalVisible(true)}>\r\n              <Text style={styles.buttonText}>Change Goal</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity style={styles.clearButton} onPress={resetHistory}>\r\n              <Text style={styles.buttonText}>Clear History</Text>\r\n            </TouchableOpacity>\r\n          </>\r\n        }\r\n      />\r\n\r\n      {/* Custom Modal for Changing Goal */}\r\n      <Modal visible={goalModalVisible} animationType=\"slide\" transparent>\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContainer}>\r\n            <Text style={styles.modalTitle}>Set New Goal</Text>\r\n            <TextInput\r\n              style={styles.modalInput}\r\n              placeholder=\"e.g. 2200\"\r\n              keyboardType=\"numeric\"\r\n              value={newGoal}\r\n              onChangeText={setNewGoal}\r\n            />\r\n            <TouchableOpacity style={styles.saveButton} onPress={handleGoalUpdate}>\r\n              <Text style={styles.saveButtonText}>Save</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => setGoalModalVisible(false)}>\r\n              <Text style={styles.cancelText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 20,\r\n    backgroundColor: '#f9f9fb',\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n    color: '#333',\r\n    textAlign: 'center',\r\n  },\r\n  goal: {\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n    color: '#666',\r\n    textAlign: 'center',\r\n  },\r\n  progressContainer: {\r\n    marginVertical: 20,\r\n    alignItems: 'center',\r\n  },\r\n  progressText: {\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n  },\r\n  progressInner: {\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  },\r\n\r\n  calorieText: {\r\n    fontSize: 22,\r\n    fontWeight: 'bold',\r\n    color: '#ff6f00',\r\n  },\r\n  remainingText: {\r\n    fontSize: 14,\r\n    color: '#555',\r\n  },\r\n  chart: {\r\n    borderRadius: 12,\r\n    marginBottom: 10,\r\n  },\r\n  average: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    color: '#777',\r\n    marginBottom: 20,\r\n    textAlign: 'center',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#bbb',\r\n    borderRadius: 10,\r\n    padding: 12,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  addButton: {\r\n    backgroundColor: '#4caf50',\r\n    padding: 14,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginBottom: 20,\r\n  },\r\n  addButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  entryItem: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#eef3f8',\r\n    padding: 12,\r\n    marginVertical: 5,\r\n    borderRadius: 8,\r\n  },\r\n  entryText: {\r\n    fontSize: 16,\r\n    color: '#333',\r\n  },\r\n  goalButton: {\r\n    backgroundColor: '#2196f3',\r\n    padding: 14,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  clearButton: {\r\n    backgroundColor: '#e53935',\r\n    padding: 14,\r\n    borderRadius: 10,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 30,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    backgroundColor: 'rgba(0,0,0,0.4)',\r\n    paddingHorizontal: 30,\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: '#fff',\r\n    borderRadius: 12,\r\n    padding: 20,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n  },\r\n  modalInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#bbb',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    fontSize: 16,\r\n    marginBottom: 15,\r\n  },\r\n  saveButton: {\r\n    backgroundColor: '#4caf50',\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  saveButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  cancelText: {\r\n    textAlign: 'center',\r\n    color: '#888',\r\n    marginTop: 10,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}