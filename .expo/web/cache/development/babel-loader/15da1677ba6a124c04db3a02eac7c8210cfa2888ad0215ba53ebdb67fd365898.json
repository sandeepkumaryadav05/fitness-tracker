{"ast":null,"code":"\"use strict\";\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport useLatestCallback from 'use-latest-callback';\nimport { DrawerProgressContext } from \"../utils/DrawerProgressContext.js\";\nimport { getDrawerWidthWeb } from \"../utils/getDrawerWidth.js\";\nimport { useFakeSharedValue } from \"../utils/useFakeSharedValue.js\";\nimport { Overlay } from './Overlay';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function Drawer({\n  direction = 'ltr',\n  drawerPosition = direction === 'rtl' ? 'right' : 'left',\n  drawerStyle,\n  drawerType = 'front',\n  onClose,\n  onTransitionStart,\n  onTransitionEnd,\n  open,\n  overlayStyle,\n  overlayAccessibilityLabel,\n  renderDrawerContent,\n  children,\n  style\n}) {\n  const drawerWidth = getDrawerWidthWeb({\n    drawerStyle\n  });\n  const progress = useFakeSharedValue(open ? 1 : 0);\n  React.useEffect(() => {\n    progress.value = open ? 1 : 0;\n  }, [open, progress]);\n  const drawerRef = React.useRef(null);\n  const onTransitionStartLatest = useLatestCallback(() => {\n    onTransitionStart?.(open === false);\n  });\n  const onTransitionEndLatest = useLatestCallback(() => {\n    onTransitionEnd?.(open === false);\n  });\n  React.useEffect(() => {\n    const element = drawerRef.current;\n    element?.addEventListener('transitionstart', onTransitionStartLatest);\n    element?.addEventListener('transitionend', onTransitionEndLatest);\n    return () => {\n      element?.removeEventListener('transitionstart', onTransitionStartLatest);\n      element?.removeEventListener('transitionend', onTransitionEndLatest);\n    };\n  }, [onTransitionEndLatest, onTransitionStartLatest]);\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n  const drawerTranslateX = open || drawerType === 'back' ? drawerPosition === 'left' ? '100%' : '-100%' : 0;\n  const drawerAnimatedStyle = drawerType !== 'permanent' ? {\n    transition: 'transform 0.3s',\n    transform: `translateX(${drawerTranslateX})`\n  } : null;\n  const contentTranslateX = open ? drawerType === 'front' ? 0 : `calc(${drawerWidth} * ${drawerPosition === 'left' ? 1 : -1})` : 0;\n  const contentAnimatedStyle = drawerType !== 'permanent' ? {\n    transition: 'transform 0.3s',\n    transform: `translateX(${contentTranslateX})`\n  } : null;\n  const drawerElement = _jsx(View, {\n    ref: drawerRef,\n    style: [styles.drawer, {\n      position: drawerType === 'permanent' ? 'relative' : 'absolute',\n      zIndex: drawerType === 'back' ? -1 : 1\n    }, {\n      width: drawerWidth\n    }, drawerType !== 'permanent' ? drawerPosition === 'right' ? {\n      right: `calc(${drawerWidth} * -1)`\n    } : {\n      left: `calc(${drawerWidth} * -1)`\n    } : null, drawerAnimatedStyle, drawerStyle],\n    children: renderDrawerContent()\n  }, \"drawer\");\n  const mainContent = _jsxs(View, {\n    style: [styles.content, contentAnimatedStyle],\n    children: [_jsx(View, {\n      \"aria-hidden\": isOpen && drawerType !== 'permanent',\n      style: styles.content,\n      children: children\n    }), drawerType !== 'permanent' ? _jsx(Overlay, {\n      open: open,\n      progress: progress,\n      onPress: () => onClose(),\n      style: overlayStyle,\n      accessibilityLabel: overlayAccessibilityLabel\n    }) : null]\n  }, \"content\");\n  return _jsx(DrawerProgressContext.Provider, {\n    value: progress,\n    children: _jsxs(View, {\n      style: [styles.container, style],\n      children: [!isRight && drawerElement, mainContent, isRight && drawerElement]\n    })\n  });\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  drawer: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    backgroundColor: 'white'\n  },\n  content: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","useLatestCallback","DrawerProgressContext","getDrawerWidthWeb","useFakeSharedValue","Overlay","jsx","_jsx","jsxs","_jsxs","Drawer","direction","drawerPosition","drawerStyle","drawerType","onClose","onTransitionStart","onTransitionEnd","open","overlayStyle","overlayAccessibilityLabel","renderDrawerContent","children","style","drawerWidth","progress","useEffect","value","drawerRef","useRef","onTransitionStartLatest","onTransitionEndLatest","element","current","addEventListener","removeEventListener","isOpen","isRight","drawerTranslateX","drawerAnimatedStyle","transition","transform","contentTranslateX","contentAnimatedStyle","drawerElement","ref","styles","drawer","position","zIndex","width","right","left","mainContent","content","onPress","accessibilityLabel","Provider","container","create","flex","flexDirection","top","bottom","maxWidth","backgroundColor"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\fit-get\\fitness-tracker\\node_modules\\react-native-drawer-layout\\src\\views\\Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport useLatestCallback from 'use-latest-callback';\n\nimport type { DrawerProps } from '../types';\nimport { DrawerProgressContext } from '../utils/DrawerProgressContext';\nimport { getDrawerWidthWeb } from '../utils/getDrawerWidth';\nimport { useFakeSharedValue } from '../utils/useFakeSharedValue';\nimport { Overlay } from './Overlay';\n\nexport function Drawer({\n  direction = 'ltr',\n  drawerPosition = direction === 'rtl' ? 'right' : 'left',\n  drawerStyle,\n  drawerType = 'front',\n  onClose,\n  onTransitionStart,\n  onTransitionEnd,\n  open,\n  overlayStyle,\n  overlayAccessibilityLabel,\n  renderDrawerContent,\n  children,\n  style,\n}: DrawerProps) {\n  const drawerWidth = getDrawerWidthWeb({\n    drawerStyle,\n  });\n\n  const progress = useFakeSharedValue(open ? 1 : 0);\n\n  React.useEffect(() => {\n    progress.value = open ? 1 : 0;\n  }, [open, progress]);\n\n  const drawerRef = React.useRef<View>(null);\n\n  const onTransitionStartLatest = useLatestCallback(() => {\n    onTransitionStart?.(open === false);\n  });\n\n  const onTransitionEndLatest = useLatestCallback(() => {\n    onTransitionEnd?.(open === false);\n  });\n\n  React.useEffect(() => {\n    const element = drawerRef.current as HTMLDivElement | null;\n\n    element?.addEventListener('transitionstart', onTransitionStartLatest);\n    element?.addEventListener('transitionend', onTransitionEndLatest);\n\n    return () => {\n      element?.removeEventListener('transitionstart', onTransitionStartLatest);\n      element?.removeEventListener('transitionend', onTransitionEndLatest);\n    };\n  }, [onTransitionEndLatest, onTransitionStartLatest]);\n\n  const isOpen = drawerType === 'permanent' ? true : open;\n  const isRight = drawerPosition === 'right';\n\n  const drawerTranslateX =\n    // The drawer stays in place at open position when `drawerType` is `back`\n    open || drawerType === 'back'\n      ? drawerPosition === 'left'\n        ? '100%'\n        : '-100%'\n      : 0;\n\n  const drawerAnimatedStyle =\n    drawerType !== 'permanent'\n      ? {\n          transition: 'transform 0.3s',\n          transform: `translateX(${drawerTranslateX})`,\n        }\n      : null;\n\n  const contentTranslateX = open\n    ? // The screen content stays in place when `drawerType` is `front`\n      drawerType === 'front'\n      ? 0\n      : `calc(${drawerWidth} * ${drawerPosition === 'left' ? 1 : -1})`\n    : 0;\n\n  const contentAnimatedStyle =\n    drawerType !== 'permanent'\n      ? {\n          transition: 'transform 0.3s',\n          transform: `translateX(${contentTranslateX})`,\n        }\n      : null;\n\n  const drawerElement = (\n    <View\n      key=\"drawer\"\n      ref={drawerRef}\n      style={[\n        styles.drawer,\n        {\n          position: drawerType === 'permanent' ? 'relative' : 'absolute',\n          zIndex: drawerType === 'back' ? -1 : 1,\n        },\n        // @ts-expect-error: width contains `calc` for web\n        { width: drawerWidth },\n        // @ts-expect-error: offset contains `calc` for web\n        drawerType !== 'permanent'\n          ? // Position drawer off-screen by default in closed state\n            // And add a translation only when drawer is open\n            // So changing position in closed state won't trigger a visible transition\n            drawerPosition === 'right'\n            ? { right: `calc(${drawerWidth} * -1)` }\n            : { left: `calc(${drawerWidth} * -1)` }\n          : null,\n        drawerAnimatedStyle,\n        drawerStyle,\n      ]}\n    >\n      {renderDrawerContent()}\n    </View>\n  );\n\n  const mainContent = (\n    <View key=\"content\" style={[styles.content, contentAnimatedStyle]}>\n      <View\n        aria-hidden={isOpen && drawerType !== 'permanent'}\n        style={styles.content}\n      >\n        {children}\n      </View>\n      {drawerType !== 'permanent' ? (\n        <Overlay\n          open={open}\n          progress={progress}\n          onPress={() => onClose()}\n          style={overlayStyle}\n          accessibilityLabel={overlayAccessibilityLabel}\n        />\n      ) : null}\n    </View>\n  );\n\n  return (\n    <DrawerProgressContext.Provider value={progress}>\n      <View style={[styles.container, style]}>\n        {!isRight && drawerElement}\n        {mainContent}\n        {isRight && drawerElement}\n      </View>\n    </DrawerProgressContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n  drawer: {\n    top: 0,\n    bottom: 0,\n    maxWidth: '100%',\n    backgroundColor: 'white',\n  },\n  content: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}