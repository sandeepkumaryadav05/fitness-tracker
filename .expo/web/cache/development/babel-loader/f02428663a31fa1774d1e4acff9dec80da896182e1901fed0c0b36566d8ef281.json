{"ast":null,"code":"\"use strict\";\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nconst APPROX_APP_BAR_HEIGHT = 56;\nconst DEFAULT_DRAWER_WIDTH = 360;\nconst DRAWER_DEFAULT_WIDTH_WEB = `min(calc(100% - ${APPROX_APP_BAR_HEIGHT}px), ${DEFAULT_DRAWER_WIDTH}px)`;\nexport function getDrawerWidthNative({\n  layout,\n  drawerStyle\n}) {\n  const defaultWidth = layout.width - APPROX_APP_BAR_HEIGHT <= 360 ? layout.width - APPROX_APP_BAR_HEIGHT : DEFAULT_DRAWER_WIDTH;\n  const {\n    width = defaultWidth\n  } = StyleSheet.flatten(drawerStyle) || {};\n  if (typeof width === 'string' && width.endsWith('%')) {\n    const percentage = Number(width.replace(/%$/, ''));\n    if (Number.isFinite(percentage)) {\n      return layout.width * (percentage / 100);\n    }\n  }\n  return typeof width === 'number' ? width : defaultWidth;\n}\nexport function getDrawerWidthWeb({\n  drawerStyle\n}) {\n  const {\n    width\n  } = StyleSheet.flatten(drawerStyle) || {};\n  return typeof width === 'string' || typeof width === 'number' ? width : DRAWER_DEFAULT_WIDTH_WEB;\n}","map":{"version":3,"names":["APPROX_APP_BAR_HEIGHT","DEFAULT_DRAWER_WIDTH","DRAWER_DEFAULT_WIDTH_WEB","getDrawerWidthNative","layout","drawerStyle","defaultWidth","width","StyleSheet","flatten","endsWith","percentage","Number","replace","isFinite","getDrawerWidthWeb"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\fit-get\\fitness-tracker\\node_modules\\react-native-drawer-layout\\src\\utils\\getDrawerWidth.tsx"],"sourcesContent":["import { type StyleProp, StyleSheet, type ViewStyle } from 'react-native';\n\nconst APPROX_APP_BAR_HEIGHT = 56;\nconst DEFAULT_DRAWER_WIDTH = 360;\n\n/**\n * Default drawer width is 360dp\n * On screens smaller than 320dp, ideally the drawer would collapse to a navigation bar\n * https://m3.material.io/components/navigation-drawer/specs\n */\nconst DRAWER_DEFAULT_WIDTH_WEB = `min(calc(100% - ${APPROX_APP_BAR_HEIGHT}px), ${DEFAULT_DRAWER_WIDTH}px)`;\n\nexport function getDrawerWidthNative({\n  layout,\n  drawerStyle,\n}: {\n  layout: { width: number; height: number };\n  drawerStyle?: StyleProp<ViewStyle>;\n}) {\n  const defaultWidth =\n    layout.width - APPROX_APP_BAR_HEIGHT <= 360\n      ? layout.width - APPROX_APP_BAR_HEIGHT\n      : DEFAULT_DRAWER_WIDTH;\n\n  const { width = defaultWidth } = StyleSheet.flatten(drawerStyle) || {};\n\n  if (typeof width === 'string' && width.endsWith('%')) {\n    // Try to calculate width if a percentage is given\n    const percentage = Number(width.replace(/%$/, ''));\n\n    if (Number.isFinite(percentage)) {\n      return layout.width * (percentage / 100);\n    }\n  }\n\n  return typeof width === 'number' ? width : defaultWidth;\n}\n\nexport function getDrawerWidthWeb({\n  drawerStyle,\n}: {\n  drawerStyle?: StyleProp<ViewStyle>;\n}) {\n  const { width } = StyleSheet.flatten(drawerStyle) || {};\n\n  return typeof width === 'string' || typeof width === 'number'\n    ? width\n    : DRAWER_DEFAULT_WIDTH_WEB;\n}\n"],"mappings":";;;AAEA,MAAMA,qBAAqB,GAAG,EAAE;AAChC,MAAMC,oBAAoB,GAAG,GAAG;AAOhC,MAAMC,wBAAwB,GAAG,mBAAmBF,qBAAqB,QAAQC,oBAAoB,KAAK;AAE1G,OAAO,SAASE,oBAAoBA,CAAC;EACnCC,MAAM;EACNC;AAIF,CAAC,EAAE;EACD,MAAMC,YAAY,GAChBF,MAAM,CAACG,KAAK,GAAGP,qBAAqB,IAAI,GAAG,GACvCI,MAAM,CAACG,KAAK,GAAGP,qBAAqB,GACpCC,oBAAoB;EAE1B,MAAM;IAAEM,KAAK,GAAGD;EAAa,CAAC,GAAGE,UAAU,CAACC,OAAO,CAACJ,WAAW,CAAC,IAAI,CAAC,CAAC;EAEtE,IAAI,OAAOE,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAEpD,MAAMC,UAAU,GAAGC,MAAM,CAACL,KAAK,CAACM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAElD,IAAID,MAAM,CAACE,QAAQ,CAACH,UAAU,CAAC,EAAE;MAC/B,OAAOP,MAAM,CAACG,KAAK,IAAII,UAAU,GAAG,GAAG,CAAC;IAC1C;EACF;EAEA,OAAO,OAAOJ,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAGD,YAAY;AACzD;AAEA,OAAO,SAASS,iBAAiBA,CAAC;EAChCV;AAGF,CAAC,EAAE;EACD,MAAM;IAAEE;EAAM,CAAC,GAAGC,UAAU,CAACC,OAAO,CAACJ,WAAW,CAAC,IAAI,CAAC,CAAC;EAEvD,OAAO,OAAOE,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,GACzDA,KAAK,GACLL,wBAAwB;AAC9B","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}