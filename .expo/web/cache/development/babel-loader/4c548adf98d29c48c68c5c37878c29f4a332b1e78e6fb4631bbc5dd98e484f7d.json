{"ast":null,"code":"import { UnavailabilityError } from 'expo-modules-core';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport ExpoFontUtils from './ExpoFontUtils';\nexport async function renderToImageAsync(glyphs, options) {\n  if (!ExpoFontUtils) {\n    throw new UnavailabilityError('expo-font', 'ExpoFontUtils.renderToImageAsync');\n  }\n  return await ExpoFontUtils.renderToImageAsync(glyphs, Object.assign({}, options, {\n    color: options?.color ? processColor(options.color) : undefined\n  }));\n}","map":{"version":3,"names":["UnavailabilityError","processColor","ExpoFontUtils","renderToImageAsync","glyphs","options","Object","assign","color","undefined"],"sources":["C:\\Users\\Lenovo\\OneDrive\\Desktop\\fit-get\\fitness-tracker\\node_modules\\expo-font\\src\\FontUtils.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\nimport { processColor } from 'react-native';\n\nimport ExpoFontUtils from './ExpoFontUtils';\nimport { RenderToImageOptions } from './FontUtils.types';\n\n/**\n * Creates an image with provided text.\n * @param glyphs Text to be exported.\n * @param options RenderToImageOptions.\n * @return Promise which fulfils with uri to image.\n * @platform android\n * @platform ios\n */\nexport async function renderToImageAsync(\n  glyphs: string,\n  options?: RenderToImageOptions\n): Promise<string> {\n  if (!ExpoFontUtils) {\n    throw new UnavailabilityError('expo-font', 'ExpoFontUtils.renderToImageAsync');\n  }\n\n  return await ExpoFontUtils.renderToImageAsync(glyphs, {\n    ...options,\n    color: options?.color ? processColor(options.color) : undefined,\n  });\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,mBAAmB;AAAC,OAAAC,YAAA;AAGxD,OAAOC,aAAa,MAAM,iBAAiB;AAW3C,OAAO,eAAeC,kBAAkBA,CACtCC,MAAc,EACdC,OAA8B;EAE9B,IAAI,CAACH,aAAa,EAAE;IAClB,MAAM,IAAIF,mBAAmB,CAAC,WAAW,EAAE,kCAAkC,CAAC;EAChF;EAEA,OAAO,MAAME,aAAa,CAACC,kBAAkB,CAACC,MAAM,EAAAE,MAAA,CAAAC,MAAA,KAC/CF,OAAO;IACVG,KAAK,EAAEH,OAAO,EAAEG,KAAK,GAAGP,YAAY,CAACI,OAAO,CAACG,KAAK,CAAC,GAAGC;EAAS,EAChE,CAAC;AACJ","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}